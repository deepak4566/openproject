class Redmine::MenuManager::Mapper
  def initialize: (untyped menu, untyped items) -> void

  # Adds an item at the end of the menu. Available options:
  # * param: the parameter name that is used for the project id (default is :project_id)
  # * if: a Proc that is called before rendering the item, the item is displayed only if it returns true
  # * caption that can be:
  #   * a localized string Symbol
  #   * a String
  #   * a Proc that can take the project as argument
  # * before, after: specify where the menu item should be inserted (eg. after: :activity)
  # * parent: menu item will be added as a child of another named menu (eg. parent: :issues)
  # * children: a Proc that is called before rendering the item. The Proc should return an array of MenuItems, which will be added as children to this item.
  #   eg. children: Proc.new {|project| [Redmine::MenuManager::MenuItem.new(...)] }
  # * last: menu item will stay at the end (eg. last: true)
  # * first: menu item will stay at the top (eg. first: true)
  # * html_options: a hash of html options that are passed to link_to
  # * partial: A partial that shall be rendered at that position
  def push: (untyped name, untyped url, ?::Hash[untyped, untyped] options) -> untyped

  # Removes a menu item
  def delete: (untyped name) -> (untyped | nil)

  def add_condition: (untyped name, untyped condition) -> (untyped | nil)

  # Checks if a menu item exists
  def exists?: (untyped name) -> untyped

  def find: (untyped name) -> untyped

  def position_of: (untyped name) -> untyped
end
