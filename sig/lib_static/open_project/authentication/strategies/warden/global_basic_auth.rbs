module OpenProject
  module Authentication
    module Strategies
      module Warden
        #
        # Allows authentication via a singular set of basic auth credentials for admin access.
        #
        # The credentials must be configured in `config/configuration.yml` like this:
        #
        #     production:
        #       authentication:
        #         global_basic_auth:
        #           user: admin
        #           password: 123456
        #
        # The strategy will only be triggered when the configured user name is sent.
        # Meaning that this strategy is skipped if a basic auth attempt involving any
        # other user name is made.
        class GlobalBasicAuth < ::Warden::Strategies::BasicAuth
          def self.configuration: () -> untyped

          #
          # Updates the configuration for this strategy. It's usually called only once, at startup.
          #
          # @param [Hash] config The configuration to be used. Must contain :user and :password.
          # @raise [ArgumentError] Raises an error if the configured user name collides with the
          #                        user name used for UserBasicAuth (apikey) or if the
          #                        provided password is empty.
          # @return [Hash] The new hash set for the configuration or an empty hash if
          #                no configuration was provided.
          def self.configure!: (?untyped config) -> (::Hash[untyped, untyped] | untyped)

          #
          # Reads the configuration for this strategy from OpenProject's `configuration.yml`.
          def self.openproject_config: () -> untyped

          def self.configuration?: () -> untyped

          def self.user: () -> untyped

          def self.password: () -> untyped

          #
          # Only valid if global basic auth is configured and tried.
          def valid?: () -> untyped

          def authenticate_user: (untyped username, untyped password) -> (untyped | nil)
        end
      end
    end
  end
end
