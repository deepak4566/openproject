module ActiveRecord
  module SessionStore
    class Session < ::ActiveRecord::Base
      extend _ActiveRecord_Relation_ClassMethods[ActiveRecord::SessionStore::Session, ActiveRecord_Relation, Integer]

      module GeneratedAttributeMethods
        def id: () -> Integer

        def id=: (Integer) -> Integer

        def id?: () -> bool

        def id_changed?: () -> bool

        def id_change: () -> [ Integer?, Integer? ]

        def id_will_change!: () -> void

        def id_was: () -> Integer?

        def id_previously_changed?: () -> bool

        def id_previous_change: () -> Array[Integer?]?

        def id_previously_was: () -> Integer?

        def id_before_last_save: () -> Integer?

        def id_change_to_be_saved: () -> Array[Integer?]?

        def id_in_database: () -> Integer?

        def saved_change_to_id: () -> Array[Integer?]?

        def saved_change_to_id?: () -> bool

        def will_save_change_to_id?: () -> bool

        def restore_id!: () -> void

        def clear_id_change: () -> void

        def session_id: () -> String

        def session_id=: (String) -> String

        def session_id?: () -> bool

        def session_id_changed?: () -> bool

        def session_id_change: () -> [ String?, String? ]

        def session_id_will_change!: () -> void

        def session_id_was: () -> String?

        def session_id_previously_changed?: () -> bool

        def session_id_previous_change: () -> Array[String?]?

        def session_id_previously_was: () -> String?

        def session_id_before_last_save: () -> String?

        def session_id_change_to_be_saved: () -> Array[String?]?

        def session_id_in_database: () -> String?

        def saved_change_to_session_id: () -> Array[String?]?

        def saved_change_to_session_id?: () -> bool

        def will_save_change_to_session_id?: () -> bool

        def restore_session_id!: () -> void

        def clear_session_id_change: () -> void

        def data: () -> String?

        def data=: (String?) -> String?

        def data?: () -> bool

        def data_changed?: () -> bool

        def data_change: () -> [ String?, String? ]

        def data_will_change!: () -> void

        def data_was: () -> String?

        def data_previously_changed?: () -> bool

        def data_previous_change: () -> Array[String?]?

        def data_previously_was: () -> String?

        def data_before_last_save: () -> String?

        def data_change_to_be_saved: () -> Array[String?]?

        def data_in_database: () -> String?

        def saved_change_to_data: () -> Array[String?]?

        def saved_change_to_data?: () -> bool

        def will_save_change_to_data?: () -> bool

        def restore_data!: () -> void

        def clear_data_change: () -> void

        def updated_at: () -> ActiveSupport::TimeWithZone?

        def updated_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

        def updated_at?: () -> bool

        def updated_at_changed?: () -> bool

        def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

        def updated_at_will_change!: () -> void

        def updated_at_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_previously_changed?: () -> bool

        def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

        def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

        def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

        def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

        def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

        def saved_change_to_updated_at?: () -> bool

        def will_save_change_to_updated_at?: () -> bool

        def restore_updated_at!: () -> void

        def clear_updated_at_change: () -> void

        def user_id: () -> Integer?

        def user_id=: (Integer?) -> Integer?

        def user_id?: () -> bool

        def user_id_changed?: () -> bool

        def user_id_change: () -> [ Integer?, Integer? ]

        def user_id_will_change!: () -> void

        def user_id_was: () -> Integer?

        def user_id_previously_changed?: () -> bool

        def user_id_previous_change: () -> Array[Integer?]?

        def user_id_previously_was: () -> Integer?

        def user_id_before_last_save: () -> Integer?

        def user_id_change_to_be_saved: () -> Array[Integer?]?

        def user_id_in_database: () -> Integer?

        def saved_change_to_user_id: () -> Array[Integer?]?

        def saved_change_to_user_id?: () -> bool

        def will_save_change_to_user_id?: () -> bool

        def restore_user_id!: () -> void

        def clear_user_id_change: () -> void
      end
      include GeneratedAttributeMethods

      module GeneratedAssociationMethods
      end
      include GeneratedAssociationMethods

      module GeneratedRelationMethods
      end

      class ActiveRecord_Relation < ::ActiveRecord::Relation
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[ActiveRecord::SessionStore::Session, Integer]
        include Enumerable[ActiveRecord::SessionStore::Session]
      end

      class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
        include GeneratedRelationMethods
        include _ActiveRecord_Relation[ActiveRecord::SessionStore::Session, Integer]
      end
    end
  end
end
