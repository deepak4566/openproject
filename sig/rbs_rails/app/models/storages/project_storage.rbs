module Storages
  class ProjectStorage < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Storages::ProjectStorage, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def project_id: () -> Integer

      def project_id=: (Integer) -> Integer

      def project_id?: () -> bool

      def project_id_changed?: () -> bool

      def project_id_change: () -> [ Integer?, Integer? ]

      def project_id_will_change!: () -> void

      def project_id_was: () -> Integer?

      def project_id_previously_changed?: () -> bool

      def project_id_previous_change: () -> Array[Integer?]?

      def project_id_previously_was: () -> Integer?

      def project_id_before_last_save: () -> Integer?

      def project_id_change_to_be_saved: () -> Array[Integer?]?

      def project_id_in_database: () -> Integer?

      def saved_change_to_project_id: () -> Array[Integer?]?

      def saved_change_to_project_id?: () -> bool

      def will_save_change_to_project_id?: () -> bool

      def restore_project_id!: () -> void

      def clear_project_id_change: () -> void

      def storage_id: () -> Integer

      def storage_id=: (Integer) -> Integer

      def storage_id?: () -> bool

      def storage_id_changed?: () -> bool

      def storage_id_change: () -> [ Integer?, Integer? ]

      def storage_id_will_change!: () -> void

      def storage_id_was: () -> Integer?

      def storage_id_previously_changed?: () -> bool

      def storage_id_previous_change: () -> Array[Integer?]?

      def storage_id_previously_was: () -> Integer?

      def storage_id_before_last_save: () -> Integer?

      def storage_id_change_to_be_saved: () -> Array[Integer?]?

      def storage_id_in_database: () -> Integer?

      def saved_change_to_storage_id: () -> Array[Integer?]?

      def saved_change_to_storage_id?: () -> bool

      def will_save_change_to_storage_id?: () -> bool

      def restore_storage_id!: () -> void

      def clear_storage_id_change: () -> void

      def creator_id: () -> Integer

      def creator_id=: (Integer) -> Integer

      def creator_id?: () -> bool

      def creator_id_changed?: () -> bool

      def creator_id_change: () -> [ Integer?, Integer? ]

      def creator_id_will_change!: () -> void

      def creator_id_was: () -> Integer?

      def creator_id_previously_changed?: () -> bool

      def creator_id_previous_change: () -> Array[Integer?]?

      def creator_id_previously_was: () -> Integer?

      def creator_id_before_last_save: () -> Integer?

      def creator_id_change_to_be_saved: () -> Array[Integer?]?

      def creator_id_in_database: () -> Integer?

      def saved_change_to_creator_id: () -> Array[Integer?]?

      def saved_change_to_creator_id?: () -> bool

      def will_save_change_to_creator_id?: () -> bool

      def restore_creator_id!: () -> void

      def clear_creator_id_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void

      def project_folder_id: () -> String?

      def project_folder_id=: (String?) -> String?

      def project_folder_id?: () -> bool

      def project_folder_id_changed?: () -> bool

      def project_folder_id_change: () -> [ String?, String? ]

      def project_folder_id_will_change!: () -> void

      def project_folder_id_was: () -> String?

      def project_folder_id_previously_changed?: () -> bool

      def project_folder_id_previous_change: () -> Array[String?]?

      def project_folder_id_previously_was: () -> String?

      def project_folder_id_before_last_save: () -> String?

      def project_folder_id_change_to_be_saved: () -> Array[String?]?

      def project_folder_id_in_database: () -> String?

      def saved_change_to_project_folder_id: () -> Array[String?]?

      def saved_change_to_project_folder_id?: () -> bool

      def will_save_change_to_project_folder_id?: () -> bool

      def restore_project_folder_id!: () -> void

      def clear_project_folder_id_change: () -> void

      def project_folder_mode: () -> untyped

      def project_folder_mode=: (untyped) -> untyped

      def project_folder_mode?: () -> bool

      def project_folder_mode_changed?: () -> bool

      def project_folder_mode_change: () -> [ untyped?, untyped? ]

      def project_folder_mode_will_change!: () -> void

      def project_folder_mode_was: () -> untyped?

      def project_folder_mode_previously_changed?: () -> bool

      def project_folder_mode_previous_change: () -> Array[untyped?]?

      def project_folder_mode_previously_was: () -> untyped?

      def project_folder_mode_before_last_save: () -> untyped?

      def project_folder_mode_change_to_be_saved: () -> Array[untyped?]?

      def project_folder_mode_in_database: () -> untyped?

      def saved_change_to_project_folder_mode: () -> Array[untyped?]?

      def saved_change_to_project_folder_mode?: () -> bool

      def will_save_change_to_project_folder_mode?: () -> bool

      def restore_project_folder_mode!: () -> void

      def clear_project_folder_mode_change: () -> void
    end
    include GeneratedAttributeMethods
    def last_project_folders: () -> Storages::LastProjectFolder::ActiveRecord_Associations_CollectionProxy
    def last_project_folders=: (Storages::LastProjectFolder::ActiveRecord_Associations_CollectionProxy | Array[Storages::LastProjectFolder]) -> (Storages::LastProjectFolder::ActiveRecord_Associations_CollectionProxy | Array[Storages::LastProjectFolder])
    def last_project_folder_ids: () -> Array[Integer]
    def last_project_folder_ids=: (Array[Integer]) -> Array[Integer]

    def project: () -> Project
    def project=: (Project?) -> Project?
    def reload_project: () -> Project?
    def build_project: (untyped) -> Project
    def create_project: (untyped) -> Project
    def create_project!: (untyped) -> Project
    def storage: () -> Storages::Storage
    def storage=: (Storages::Storage?) -> Storages::Storage?
    def reload_storage: () -> Storages::Storage?
    def build_storage: (untyped) -> Storages::Storage
    def create_storage: (untyped) -> Storages::Storage
    def create_storage!: (untyped) -> Storages::Storage
    def creator: () -> User
    def creator=: (User?) -> User?
    def reload_creator: () -> User?
    def build_creator: (untyped) -> User
    def create_creator: (untyped) -> User
    def create_creator!: (untyped) -> User
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Storages::ProjectStorage, Integer]
      include Enumerable[Storages::ProjectStorage]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Storages::ProjectStorage, Integer]
    end
  end
end
