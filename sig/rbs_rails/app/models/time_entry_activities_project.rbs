class TimeEntryActivitiesProject < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[TimeEntryActivitiesProject, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def activity_id: () -> Integer

    def activity_id=: (Integer) -> Integer

    def activity_id?: () -> bool

    def activity_id_changed?: () -> bool

    def activity_id_change: () -> [ Integer?, Integer? ]

    def activity_id_will_change!: () -> void

    def activity_id_was: () -> Integer?

    def activity_id_previously_changed?: () -> bool

    def activity_id_previous_change: () -> Array[Integer?]?

    def activity_id_previously_was: () -> Integer?

    def activity_id_before_last_save: () -> Integer?

    def activity_id_change_to_be_saved: () -> Array[Integer?]?

    def activity_id_in_database: () -> Integer?

    def saved_change_to_activity_id: () -> Array[Integer?]?

    def saved_change_to_activity_id?: () -> bool

    def will_save_change_to_activity_id?: () -> bool

    def restore_activity_id!: () -> void

    def clear_activity_id_change: () -> void

    def project_id: () -> Integer

    def project_id=: (Integer) -> Integer

    def project_id?: () -> bool

    def project_id_changed?: () -> bool

    def project_id_change: () -> [ Integer?, Integer? ]

    def project_id_will_change!: () -> void

    def project_id_was: () -> Integer?

    def project_id_previously_changed?: () -> bool

    def project_id_previous_change: () -> Array[Integer?]?

    def project_id_previously_was: () -> Integer?

    def project_id_before_last_save: () -> Integer?

    def project_id_change_to_be_saved: () -> Array[Integer?]?

    def project_id_in_database: () -> Integer?

    def saved_change_to_project_id: () -> Array[Integer?]?

    def saved_change_to_project_id?: () -> bool

    def will_save_change_to_project_id?: () -> bool

    def restore_project_id!: () -> void

    def clear_project_id_change: () -> void

    def active: () -> bool?

    def active=: (bool?) -> bool?

    def active?: () -> bool

    def active_changed?: () -> bool

    def active_change: () -> [ bool?, bool? ]

    def active_will_change!: () -> void

    def active_was: () -> bool?

    def active_previously_changed?: () -> bool

    def active_previous_change: () -> Array[bool?]?

    def active_previously_was: () -> bool?

    def active_before_last_save: () -> bool?

    def active_change_to_be_saved: () -> Array[bool?]?

    def active_in_database: () -> bool?

    def saved_change_to_active: () -> Array[bool?]?

    def saved_change_to_active?: () -> bool

    def will_save_change_to_active?: () -> bool

    def restore_active!: () -> void

    def clear_active_change: () -> void
  end
  include GeneratedAttributeMethods

  def project: () -> Project
  def project=: (Project?) -> Project?
  def reload_project: () -> Project?
  def build_project: (untyped) -> Project
  def create_project: (untyped) -> Project
  def create_project!: (untyped) -> Project
  def activity: () -> TimeEntryActivity
  def activity=: (TimeEntryActivity?) -> TimeEntryActivity?
  def reload_activity: () -> TimeEntryActivity?
  def build_activity: (untyped) -> TimeEntryActivity
  def create_activity: (untyped) -> TimeEntryActivity
  def create_activity!: (untyped) -> TimeEntryActivity
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TimeEntryActivitiesProject, Integer]
    include Enumerable[TimeEntryActivitiesProject]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[TimeEntryActivitiesProject, Integer]
  end
end
