module Webhooks
  class Webhook < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Webhooks::Webhook, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def name: () -> String?

      def name=: (String?) -> String?

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def url: () -> String?

      def url=: (String?) -> String?

      def url?: () -> bool

      def url_changed?: () -> bool

      def url_change: () -> [ String?, String? ]

      def url_will_change!: () -> void

      def url_was: () -> String?

      def url_previously_changed?: () -> bool

      def url_previous_change: () -> Array[String?]?

      def url_previously_was: () -> String?

      def url_before_last_save: () -> String?

      def url_change_to_be_saved: () -> Array[String?]?

      def url_in_database: () -> String?

      def saved_change_to_url: () -> Array[String?]?

      def saved_change_to_url?: () -> bool

      def will_save_change_to_url?: () -> bool

      def restore_url!: () -> void

      def clear_url_change: () -> void

      def description: () -> String

      def description=: (String) -> String

      def description?: () -> bool

      def description_changed?: () -> bool

      def description_change: () -> [ String?, String? ]

      def description_will_change!: () -> void

      def description_was: () -> String?

      def description_previously_changed?: () -> bool

      def description_previous_change: () -> Array[String?]?

      def description_previously_was: () -> String?

      def description_before_last_save: () -> String?

      def description_change_to_be_saved: () -> Array[String?]?

      def description_in_database: () -> String?

      def saved_change_to_description: () -> Array[String?]?

      def saved_change_to_description?: () -> bool

      def will_save_change_to_description?: () -> bool

      def restore_description!: () -> void

      def clear_description_change: () -> void

      def secret: () -> String?

      def secret=: (String?) -> String?

      def secret?: () -> bool

      def secret_changed?: () -> bool

      def secret_change: () -> [ String?, String? ]

      def secret_will_change!: () -> void

      def secret_was: () -> String?

      def secret_previously_changed?: () -> bool

      def secret_previous_change: () -> Array[String?]?

      def secret_previously_was: () -> String?

      def secret_before_last_save: () -> String?

      def secret_change_to_be_saved: () -> Array[String?]?

      def secret_in_database: () -> String?

      def saved_change_to_secret: () -> Array[String?]?

      def saved_change_to_secret?: () -> bool

      def will_save_change_to_secret?: () -> bool

      def restore_secret!: () -> void

      def clear_secret_change: () -> void

      def enabled: () -> bool

      def enabled=: (bool) -> bool

      def enabled?: () -> bool

      def enabled_changed?: () -> bool

      def enabled_change: () -> [ bool?, bool? ]

      def enabled_will_change!: () -> void

      def enabled_was: () -> bool?

      def enabled_previously_changed?: () -> bool

      def enabled_previous_change: () -> Array[bool?]?

      def enabled_previously_was: () -> bool?

      def enabled_before_last_save: () -> bool?

      def enabled_change_to_be_saved: () -> Array[bool?]?

      def enabled_in_database: () -> bool?

      def saved_change_to_enabled: () -> Array[bool?]?

      def saved_change_to_enabled?: () -> bool

      def will_save_change_to_enabled?: () -> bool

      def restore_enabled!: () -> void

      def clear_enabled_change: () -> void

      def all_projects: () -> bool

      def all_projects=: (bool) -> bool

      def all_projects?: () -> bool

      def all_projects_changed?: () -> bool

      def all_projects_change: () -> [ bool?, bool? ]

      def all_projects_will_change!: () -> void

      def all_projects_was: () -> bool?

      def all_projects_previously_changed?: () -> bool

      def all_projects_previous_change: () -> Array[bool?]?

      def all_projects_previously_was: () -> bool?

      def all_projects_before_last_save: () -> bool?

      def all_projects_change_to_be_saved: () -> Array[bool?]?

      def all_projects_in_database: () -> bool?

      def saved_change_to_all_projects: () -> Array[bool?]?

      def saved_change_to_all_projects?: () -> bool

      def will_save_change_to_all_projects?: () -> bool

      def restore_all_projects!: () -> void

      def clear_all_projects_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def events: () -> Webhooks::Event::ActiveRecord_Associations_CollectionProxy
    def events=: (Webhooks::Event::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Event]) -> (Webhooks::Event::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Event])
    def event_ids: () -> Array[Integer]
    def event_ids=: (Array[Integer]) -> Array[Integer]
    def webhook_projects: () -> Webhooks::Project::ActiveRecord_Associations_CollectionProxy
    def webhook_projects=: (Webhooks::Project::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Project]) -> (Webhooks::Project::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Project])
    def webhook_project_ids: () -> Array[Integer]
    def webhook_project_ids=: (Array[Integer]) -> Array[Integer]
    def projects: () -> Project::ActiveRecord_Associations_CollectionProxy
    def projects=: (Project::ActiveRecord_Associations_CollectionProxy | Array[Project]) -> (Project::ActiveRecord_Associations_CollectionProxy | Array[Project])
    def project_ids: () -> Array[Integer]
    def project_ids=: (Array[Integer]) -> Array[Integer]
    def deliveries: () -> Webhooks::Log::ActiveRecord_Associations_CollectionProxy
    def deliveries=: (Webhooks::Log::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Log]) -> (Webhooks::Log::ActiveRecord_Associations_CollectionProxy | Array[Webhooks::Log])
    def delivery_ids: () -> Array[Integer]
    def delivery_ids=: (Array[Integer]) -> Array[Integer]

    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Webhooks::Webhook, Integer]
      include Enumerable[Webhooks::Webhook]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Webhooks::Webhook, Integer]
    end
  end
end
