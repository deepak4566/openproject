class UserPassword < ::ApplicationRecord
  class SHA1 < ::UserPassword
    extend _ActiveRecord_Relation_ClassMethods[UserPassword::SHA1, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def user_id: () -> Integer

      def user_id=: (Integer) -> Integer

      def user_id?: () -> bool

      def user_id_changed?: () -> bool

      def user_id_change: () -> [ Integer?, Integer? ]

      def user_id_will_change!: () -> void

      def user_id_was: () -> Integer?

      def user_id_previously_changed?: () -> bool

      def user_id_previous_change: () -> Array[Integer?]?

      def user_id_previously_was: () -> Integer?

      def user_id_before_last_save: () -> Integer?

      def user_id_change_to_be_saved: () -> Array[Integer?]?

      def user_id_in_database: () -> Integer?

      def saved_change_to_user_id: () -> Array[Integer?]?

      def saved_change_to_user_id?: () -> bool

      def will_save_change_to_user_id?: () -> bool

      def restore_user_id!: () -> void

      def clear_user_id_change: () -> void

      def hashed_password: () -> String

      def hashed_password=: (String) -> String

      def hashed_password?: () -> bool

      def hashed_password_changed?: () -> bool

      def hashed_password_change: () -> [ String?, String? ]

      def hashed_password_will_change!: () -> void

      def hashed_password_was: () -> String?

      def hashed_password_previously_changed?: () -> bool

      def hashed_password_previous_change: () -> Array[String?]?

      def hashed_password_previously_was: () -> String?

      def hashed_password_before_last_save: () -> String?

      def hashed_password_change_to_be_saved: () -> Array[String?]?

      def hashed_password_in_database: () -> String?

      def saved_change_to_hashed_password: () -> Array[String?]?

      def saved_change_to_hashed_password?: () -> bool

      def will_save_change_to_hashed_password?: () -> bool

      def restore_hashed_password!: () -> void

      def clear_hashed_password_change: () -> void

      def salt: () -> String?

      def salt=: (String?) -> String?

      def salt?: () -> bool

      def salt_changed?: () -> bool

      def salt_change: () -> [ String?, String? ]

      def salt_will_change!: () -> void

      def salt_was: () -> String?

      def salt_previously_changed?: () -> bool

      def salt_previous_change: () -> Array[String?]?

      def salt_previously_was: () -> String?

      def salt_before_last_save: () -> String?

      def salt_change_to_be_saved: () -> Array[String?]?

      def salt_in_database: () -> String?

      def saved_change_to_salt: () -> Array[String?]?

      def saved_change_to_salt?: () -> bool

      def will_save_change_to_salt?: () -> bool

      def restore_salt!: () -> void

      def clear_salt_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone?

      def created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone?

      def updated_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void

      def type: () -> String

      def type=: (String) -> String

      def type?: () -> bool

      def type_changed?: () -> bool

      def type_change: () -> [ String?, String? ]

      def type_will_change!: () -> void

      def type_was: () -> String?

      def type_previously_changed?: () -> bool

      def type_previous_change: () -> Array[String?]?

      def type_previously_was: () -> String?

      def type_before_last_save: () -> String?

      def type_change_to_be_saved: () -> Array[String?]?

      def type_in_database: () -> String?

      def saved_change_to_type: () -> Array[String?]?

      def saved_change_to_type?: () -> bool

      def will_save_change_to_type?: () -> bool

      def restore_type!: () -> void

      def clear_type_change: () -> void
    end
    include GeneratedAttributeMethods

    def user: () -> User
    def user=: (User?) -> User?
    def reload_user: () -> User?
    def build_user: (untyped) -> User
    def create_user: (untyped) -> User
    def create_user!: (untyped) -> User
    module GeneratedAssociationMethods
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[UserPassword::SHA1, Integer]
      include Enumerable[UserPassword::SHA1]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[UserPassword::SHA1, Integer]
    end
  end
end
