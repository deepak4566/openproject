class MeetingParticipant < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[MeetingParticipant, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def meeting_id: () -> Integer?

    def meeting_id=: (Integer?) -> Integer?

    def meeting_id?: () -> bool

    def meeting_id_changed?: () -> bool

    def meeting_id_change: () -> [ Integer?, Integer? ]

    def meeting_id_will_change!: () -> void

    def meeting_id_was: () -> Integer?

    def meeting_id_previously_changed?: () -> bool

    def meeting_id_previous_change: () -> Array[Integer?]?

    def meeting_id_previously_was: () -> Integer?

    def meeting_id_before_last_save: () -> Integer?

    def meeting_id_change_to_be_saved: () -> Array[Integer?]?

    def meeting_id_in_database: () -> Integer?

    def saved_change_to_meeting_id: () -> Array[Integer?]?

    def saved_change_to_meeting_id?: () -> bool

    def will_save_change_to_meeting_id?: () -> bool

    def restore_meeting_id!: () -> void

    def clear_meeting_id_change: () -> void

    def email: () -> String?

    def email=: (String?) -> String?

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ String?, String? ]

    def email_will_change!: () -> void

    def email_was: () -> String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> Array[String?]?

    def email_previously_was: () -> String?

    def email_before_last_save: () -> String?

    def email_change_to_be_saved: () -> Array[String?]?

    def email_in_database: () -> String?

    def saved_change_to_email: () -> Array[String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def name: () -> String?

    def name=: (String?) -> String?

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def invited: () -> bool?

    def invited=: (bool?) -> bool?

    def invited?: () -> bool

    def invited_changed?: () -> bool

    def invited_change: () -> [ bool?, bool? ]

    def invited_will_change!: () -> void

    def invited_was: () -> bool?

    def invited_previously_changed?: () -> bool

    def invited_previous_change: () -> Array[bool?]?

    def invited_previously_was: () -> bool?

    def invited_before_last_save: () -> bool?

    def invited_change_to_be_saved: () -> Array[bool?]?

    def invited_in_database: () -> bool?

    def saved_change_to_invited: () -> Array[bool?]?

    def saved_change_to_invited?: () -> bool

    def will_save_change_to_invited?: () -> bool

    def restore_invited!: () -> void

    def clear_invited_change: () -> void

    def attended: () -> bool?

    def attended=: (bool?) -> bool?

    def attended?: () -> bool

    def attended_changed?: () -> bool

    def attended_change: () -> [ bool?, bool? ]

    def attended_will_change!: () -> void

    def attended_was: () -> bool?

    def attended_previously_changed?: () -> bool

    def attended_previous_change: () -> Array[bool?]?

    def attended_previously_was: () -> bool?

    def attended_before_last_save: () -> bool?

    def attended_change_to_be_saved: () -> Array[bool?]?

    def attended_in_database: () -> bool?

    def saved_change_to_attended: () -> Array[bool?]?

    def saved_change_to_attended?: () -> bool

    def will_save_change_to_attended?: () -> bool

    def restore_attended!: () -> void

    def clear_attended_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def meeting: () -> Meeting
  def meeting=: (Meeting?) -> Meeting?
  def reload_meeting: () -> Meeting?
  def build_meeting: (untyped) -> Meeting
  def create_meeting: (untyped) -> Meeting
  def create_meeting!: (untyped) -> Meeting
  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[MeetingParticipant, Integer]
    include Enumerable[MeetingParticipant]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[MeetingParticipant, Integer]
  end
end
