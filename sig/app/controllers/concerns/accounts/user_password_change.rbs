#
# Intended to be used by the MyController and AccountController for password change flows
module Accounts::UserPasswordChange
  #
  # Process a password change form, used when the user is forced
  # to change the password.
  # When making changes here, also check MyController.change_password
  def change_password_flow: (user: untyped, params: untyped, ?update_legacy: bool, ?show_user_name: bool) { (untyped) -> untyped } -> (untyped | nil)

  #
  # Log an attempt to log in to a locked account or with invalid credentials
  # and show a flash message.
  def flash_and_log_invalid_credentials: (?flash_now: bool, ?is_logged_in: bool) -> (nil | untyped)

  def render_password_change: (untyped user, untyped message, ?show_user_name: bool) -> untyped

  #
  # Redirect if the user cannot change its password
  def redirect_if_password_change_not_allowed: (untyped user) -> (true | false)

  def flash_error_message: (?log_reason: ::String, ?flash_now: bool) { () -> untyped } -> untyped
end
