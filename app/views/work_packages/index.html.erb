<%#-- copyright
OpenProject is a project management system.
Copyright (C) 2012-2014 the OpenProject Foundation (OPF)

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See doc/COPYRIGHT.rdoc for more details.

++#%>

<%
possible_project_types = @project ? @project.types : Project.all.map(&:types).reduce{|memo,t| memo & t} || []
gon.project_types = possible_project_types.map{ |type| [type.id, type.name] }
# TODO fetch data from API endpoint
# TODO: move this out of the view

if User.current.allowed_to? :export_work_packages, project, global: project.nil?
  gon.export_formats = {
    atom:     url_for(format: 'atom',project_id: project, query_id: (query.new_record? ? nil : query), key: User.current.rss_key),
    csv:      url_for(format: 'csv', project_id: project),
    pdf:      url_for(format: 'pdf', project_id: project),
    pdf_desc: url_for(format: 'pdf', project_id: project, show_descriptions: true)
  }
  # I18n.t(:label_pdf_with_descriptions)
  # call_hook(:view_work_packages_index_other_formats, link_formatter: f, project: project)
end
%>

<%= include_gon %>

<!-- TODO: replace with Angular routing solution -->
<ng-include src="'/templates/work_packages.html'"></ng-include>

<%= call_hook(:view_work_packages_index_bottom, { :project => project, :query => query }) %>

<% content_for :sidebar do %>
  <%= render :partial => 'sidebar' %>
<% end %>

<% content_for :header_tags do %>
  <%= auto_discovery_link_tag(:atom, {:query_id => query, :format => 'atom', :page => nil, :key => User.current.rss_key}, :title => l(:label_work_package_plural)) %>
  <%= auto_discovery_link_tag(:atom, {:controller => '/journals', :action => 'index', :query_id => query, :format => 'atom', :page => nil, :key => User.current.rss_key}, :title => l(:label_changes_details)) %>
<% end %>
