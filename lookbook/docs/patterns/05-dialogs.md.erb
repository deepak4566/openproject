As of now, this page is still a stub. In particular, the considerations on when and where to apply Dialogs are still missing.

For now, it can be stated that OpenProject employs Dialogs for more purposes than GitHub [Primer specifies](https://primer.style/components/dialog).


## Special kinds of dialogs

We have multiple kind of dialogs that re-appear throughout the whole application. In order to make sure, they all look and feel alike, we further specify them here.

### Confirmation dialogs

Whenever a user is about to perform an action that has a significant impact, a confirmation dialog is shown.

This can come in the form of a positive confirmation where a user is asked to e.g. confirm the creation of a new model.

<%= embed OpenProject::Common::DialogPreview, :confirmation %>

Or it can be to ascertain the user actually wants to destroy a model.

<%= embed OpenProject::Common::DialogPreview, :confirm_deletion %>


#### Where it's used

- Project list &rarr; Delete the project list

### Form dialogs

Within the OpenProject application, forms are oftentimes rendered within a dialog. It is used e.g. for
the creation of new models or for the modification of existing ones.

Form dialogs consist of a header, a body where the form is rendered in and a footer with the buttons to submit
or cancel the action.

The primer specification [suggests a pattern](/lookbook/inspect/primer/alpha/dialog/with_form) for rendering such dialogs.
It consists of a form spanning both the body as well as the footer of the dialog. This has the drawback of the footer
potentially being rendered outside of the dialog. That behaviour is undesirable. Primer defines to cope with longer
content by scrolling the body.

In order for this to happen, the form should only be rendered inside the body. The submit button can be logically put inside
the form via the `form` attribute.

In pseudo html, the logical format is then like this:

```html

<dialog>
  <dialog-header>
    Dialog title
  </dialog-header>
  <dialog-body>
    <form id='the-form-id'>
      ... form content ...
    </form>
  </dialog-body>
  <dialog-footer>
    <input type="submit" form="the-form-id">Submit</button>
  </dialog-footer>
</dialog>

```

<%= embed OpenProject::Common::DialogPreview, :form %>


#### Where it's used

- WorkPackage &rarr; Meeting Tab &rarr; Add meeting to WorkPackage

### User nudging modal

The idea of nudging modals is to promote users to perform actions that are not 100% mandatory but might be interesting for them. For example, after creating a type, an admin would like to add the new type to a project and configure a workflow for it. Another example is to grant personal access to a recently created storage:

<lookbook-embed
preview="OpenProject::Storages::Admin::OAuthAccessGrantNudgeModalComponentPreview"
scenario="default"
panels="">
</lookbook-embed>


#### Accessibility considerations

To be written down..

#### Where it's used

- Admin &rarr; Storages &rarr; OAuth Grant Access
