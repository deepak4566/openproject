#!/usr/bin/env node

//-- copyright
// OpenProject is a project management system.
// Copyright (C) 2012-2015 the OpenProject Foundation (OPF)
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License version 3.
//
// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
// Copyright (C) 2006-2013 Jean-Philippe Lang
// Copyright (C) 2010-2013 the ChiliProject Team
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
//
// See doc/COPYRIGHT.rdoc for more details.
//++

var path = require('path');
var tsproject = require('tsproject');
var karma = require('karma');
var fs = require('fs');
var vfs = require('vinyl-fs');

function deleteFolderRecursive(path) {
  if (fs.existsSync(path)) {
    fs.readdirSync(path).forEach(function (file) {
      var curPath = path + "/" + file;

      if (fs.lstatSync(curPath).isDirectory()) {
        deleteFolderRecursive(curPath);

      } else {
        fs.unlinkSync(curPath);
      }
    });

    fs.rmdirSync(path);
  }
}

// Clean old TS build dir
var frontendPath = path.resolve(__dirname, '..');
var tsOutDir = path.resolve(frontendPath, 'tests/unit/tests/typescript');
deleteFolderRecursive(tsOutDir);

// Compile TS
var stream = tsproject.src('./tsconfig.test.json', {
  compilerOptions: {
    outDir: tsOutDir
  }
}).pipe(vfs.dest('.'));

// Run karma
stream.on('end', function () {
  karma.server.start(
    {
      configFile: path.resolve(frontendPath, 'karma.conf.js'),
      singleRun: true
    },
    function (exitCode) {
      if (exitCode === 0) {
        console.info('No tests have failed');
        console.info('Files generated by tsc were deleted.');
        deleteFolderRecursive(tsOutDir);
      }
      else {
        console.warn('Tests have failed');
        console.info('Files generated by tsc can be found in: ' + tsOutDir);
      }

      process.exit(exitCode);
    }
  );
});
