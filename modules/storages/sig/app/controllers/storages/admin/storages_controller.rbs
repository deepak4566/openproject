# Purpose: CRUD the global admin page of Storages (=Nextcloud servers)
class Storages::Admin::StoragesController < ApplicationController
  # Index page with a list of Storages objects
  # Called by: Global app/config/routes.rb to serve Web page
  def index: () -> untyped

  # Show page with details of one Storage object.
  # Called by: Global app/config/routes.rb to serve Web page
  def show: () -> nil

  # Show the admin page to create a new Storage object.
  # Sets the attributes provider_type and name as default values and then
  # renders the new page (allowing the user to overwrite these values and to
  # fill in other attributes).
  # Used by: The index page above, when the user presses the (+) button.
  # Called by: Global app/config/routes.rb to serve Web page
  def new: () -> untyped

  # Actually create a Storage object.
  # Overwrite the creator_id with the current_user. Is this this pattern always used?
  # Use service pattern to create a new Storage
  # See also: storages/services/storages/storages/create_service.rb
  # Called by: Global app/config/routes.rb to serve Web page
  def create: () -> untyped

  # Edit page is very similar to new page, except that we don't need to set
  # default attribute values because the object already exists
  # Called by: Global app/config/routes.rb to serve Web page
  def edit: () -> nil

  # Update is similar to create above
  # See also: create above
  # Called by: Global app/config/routes.rb to serve Web page
  def update: () -> untyped

  # Purpose: Destroy a specific Storage
  # Called by: Global app/config/routes.rb to serve Web page
  def destroy: () -> untyped

  def replace_oauth_application: () -> untyped

  # Used by: admin layout
  # Breadcrumbs is something like OpenProject > Admin > Storages.
  # This returns the name of the last part (Storages admin page)
  def default_breadcrumb: () -> untyped

  # See: default_breadcrum above
  # Defines whether to show breadcrumbs on the page or not.
  def show_local_breadcrumb: () -> true

  private

  def oauth_application: (untyped service_result) -> untyped

  # Called by create and update above in order to check if the
  # update parameters are correctly set.
  def permitted_storage_params: () -> untyped
end
