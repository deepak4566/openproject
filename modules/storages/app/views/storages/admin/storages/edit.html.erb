<!-- Standard Ruby view, please see the controller for comments -->

<!-- We want to hide client_secret from the user while allowing the user to edit the other attributes -->
<% html_title t(:label_administration), t("project_module_storages"), t('label_edit_x', x: @object.name) %>
<% local_assigns[:additional_breadcrumb] = @object.name %>
<%= toolbar title: t('label_edit_x', x: @object.name) %>

<%= labelled_tabular_form_for @object, url: admin_settings_storage_path(@object), as: :storages_storage do |f| -%>
  <%= render partial: 'form', locals: { f: f } %>
  <%= styled_button_tag t(:button_save), class: "-highlight -with-icon icon-checkmark" %>
<% end %>

<% if @object.oauth_application %>
  <%= render(AttributeGroups::AttributeGroupComponent.new) do |component| %>
    <% component.with_header(title: "OpenProject #{t(:'storages.label_oauth_application_details')}") %>

    <% component.with_attributes([
      { key: "OpenProject #{Storages::Admin::LABEL_OAUTH_CLIENT_ID}", value: @object.oauth_application.uid },
      { key: "OpenProject #{Storages::Admin::LABEL_OAUTH_CLIENT_SECRET}", value: "●●●●●●●●●●●●●●●●" },
    ]) %>

    <%= link_to(t("storages.buttons.replace_openproject_oauth"),
                replace_oauth_application_admin_settings_storage_path(@object),
                method: :delete,
                data: { confirm: t(:'storages.confirm_replace_oauth_application') },
                class: 'button -with-icon icon-reload') %>
  <% end %>
<% end %>

<%= render(AttributeGroups::AttributeGroupComponent.new) do |component| %>
  <% component.with_header(title: "#{t("storages.provider_types.#{@object.short_provider_type}.name")} #{t(:'storages.label_oauth_client_details')}") %>

  <% if @object.oauth_client %>
    <% component.with_attributes([
      { key: "#{t("storages.provider_types.#{@object.short_provider_type}.name")} #{Storages::Admin::LABEL_OAUTH_CLIENT_ID}",
        value: @object.oauth_client.client_id },
      { key: "#{t("storages.provider_types.#{@object.short_provider_type}.name")} #{Storages::Admin::LABEL_OAUTH_CLIENT_SECRET}",
        value: short_secret(@object.oauth_client.client_secret) },
    ]) %>

    <%= link_to(t("storages.buttons.replace_provider_type_oauth", provider_type: t("storages.provider_types.#{@object.short_provider_type}.name")),
                new_admin_settings_storage_oauth_client_path(@object),
                data: { confirm: t(:'storages.confirm_replace_oauth_client') },
                class: 'button -with-icon icon-reload') %>
  <% else %>
    <%= link_to(t("js.label_create"), new_admin_settings_storage_oauth_client_path(@object), class: 'button -with-icon icon-add') %>
  <% end %>
<% end %>
