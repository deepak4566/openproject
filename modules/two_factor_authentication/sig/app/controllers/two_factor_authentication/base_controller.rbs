module ::TwoFactorAuthentication
  class BaseController < ApplicationController
    def new: () -> untyped

    #
    # Confirm the change of the default device
    # using the token on it.
    # Subject to password confirmation if the user supports it.
    def make_default: () -> untyped

    #
    # Destroy the given device if its not the default
    def destroy: () -> (nil | untyped)

    #
    # Send a confirmation and request a OTP entry from the user to activate the device
    def confirm: () -> (untyped | nil | untyped | untyped)

    private

    #
    # Request (if needed) the token for entering
    def request_device_confirmation_token: () -> untyped

    #
    # Validate the token input
    def validate_device_token: () -> untyped

    # rubocop:disable Metrics/AbcSize
    def confirm_and_save: (untyped result) -> (true | false)

    def request_token_for_device: (untyped device, untyped locals) -> untyped

    def index_path: () -> untyped

    def registration_failure_path: () -> untyped

    def registration_success_path: () -> untyped

    def new_device_params: () -> untyped

    def logout_other_sessions: () -> untyped

    def permitted_device_params: () -> untyped

    def ensure_token_parameter: () -> (false | true)

    def new_device_type!: (untyped type) -> untyped

    def find_device: () -> untyped

    def find_user: () -> true

    def target_user: () -> untyped

    def show_local_breadcrumb: () -> true

    def default_breadcrumb: () -> untyped

    def available_devices: () -> untyped

    def strategy_manager: () -> untyped

    def ensure_enabled_2fa: () -> (untyped | nil)

    def token_service: (untyped device) -> untyped
  end
end
